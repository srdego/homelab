networks:
  rproxy:
    external: true

volumes:
  prometheus-data:
    external: true
  alertmanager-data:
    external: true

services:
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:9090/-/healthy > /dev/null 2>&1 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - prometheus-data:/prometheus
      - ./config:/etc/prometheus:ro
    networks:
      - rproxy
    restart: unless-stopped

  alertmanager:
    image: docker.io/prom/alertmanager:latest
    container_name: alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yaml
      - --storage.path=/alertmanager
    volumes:
      - alertmanager-data:/alertmanager
      - ./config:/etc/alertmanager:ro
    networks:
      - rproxy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:9093/-/healthy > /dev/null 2>&1 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    command:
      - --path.rootfs=/host
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    volumes:
      - /:/host:ro,rslave
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - rproxy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:9100/metrics > /dev/null 2>&1 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - rproxy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:8080/healthz > /dev/null 2>&1 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
